datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  comments  Int?
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  likes     Int?
  updatedAt DateTime @updatedAt
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model Profile {
  bio            String?
  createdAt      DateTime @default(now())
  firstName      String?
  id             String   @id @default(cuid())
  lastName       String?
  location       String?
  profilePicture Json?
  updatedAt      DateTime @updatedAt
  user           User?    @relation(fields: [userId], references: [id])
  userId         String?
}

model Connection {
  connection   Connection?           @relation(name: "ConnectionOnConnections", fields: [connectionId], references: [id])
  connectionId String?
  connections  Connection[]          @relation(name: "ConnectionOnConnections")
  createdAt    DateTime              @default(now())
  id           String                @id @default(cuid())
  status       EnumConnectionStatus?
  updatedAt    DateTime              @updatedAt
  user         User?                 @relation(fields: [userId], references: [id])
  userId       String?
}

model Message {
  content   String?
  createdAt DateTime  @default(now())
  id        String    @id @default(cuid())
  receiver  String?
  sender    String?
  timestamp DateTime?
  updatedAt DateTime  @updatedAt
}

model User {
  connections   Connection[]
  createdAt     DateTime     @default(now())
  email         String?      @unique
  firstName     String?
  id            String       @id @default(cuid())
  lastName      String?
  password      String
  posts         Post[]
  profiles      Profile[]
  roles         Json
  supertokensId String?
  updatedAt     DateTime     @updatedAt
  username      String       @unique
}

enum EnumConnectionStatus {
  Option1
}
